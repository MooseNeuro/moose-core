name: Build and Deploy Documentation
on:
  push:
    branches: [ development ]
    paths:
      - 'docs/**'
  pull_request:
    branches: [ development ]
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        working-directory: ./docs
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install sphinx sphinx_rtd_theme
          
      - name: Build documentation
        working-directory: ./docs
        run: |
          make html
          
      - name: Prepare docs directory
        run: |
          # Save source files to temp location
          mkdir -p /tmp/docs-source
          [ -d docs/source ] && cp -r docs/source /tmp/docs-source/ || true
          [ -f docs/Makefile ] && cp docs/Makefile /tmp/docs-source/ || true
          [ -f docs/make.bat ] && cp docs/make.bat /tmp/docs-source/ || true
          [ -f docs/requirements.txt ] && cp docs/requirements.txt /tmp/docs-source/ || true
          [ -f docs/conf.py ] && cp docs/conf.py /tmp/docs-source/ || true
          
          # Clear docs directory (preserving .git)
          find docs -mindepth 1 -not -path "*/\.git*" -delete
          
          # Copy built HTML files to docs directory
          cp -r docs/_build/html/* docs/
          
          # Add .nojekyll file to prevent Jekyll processing
          touch docs/.nojekyll
          
          # Restore source files
          mkdir -p docs/source
          [ -d /tmp/docs-source/source ] && cp -r /tmp/docs-source/source/* docs/source/ || true
          [ -f /tmp/docs-source/Makefile ] && cp /tmp/docs-source/Makefile docs/ || true
          [ -f /tmp/docs-source/make.bat ] && cp /tmp/docs-source/make.bat docs/ || true
          [ -f /tmp/docs-source/requirements.txt ] && cp /tmp/docs-source/requirements.txt docs/ || true
          [ -f /tmp/docs-source/conf.py ] && cp /tmp/docs-source/conf.py docs/ || true
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "Update documentation" || echo "No changes to commit"
          git push
